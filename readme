fdfault is a finite difference code for solving elastodynamic rupture problems

Features:

- High order finite difference method
- Complex geometries handled through coordinate transforms on structured mesh
- Boundary conditions are enforced weakly, producing a provably stable method
- Supports elastic and elastic-plastic material response
- Several friction laws, permits heterogeneous parameters in several ways
- Parallelized using MPI
- Included Python module to simplify setting up problems and generating input files
- Analysis tools for Python and MATLAB

Requirements:

- C++ compiler with an MPI library
- Python (supports both Python 2 and 3) with numpy required for scripting problem setup

#######################################################################################

Installation Instructions:

If installing from a downloaded source tarball, enter

> tar -zxvf fdfault-v1.0.tar.gz

Or clone the git repository using

> git clone http://github.io/fdfault.git

For most users, building the source code should simply require

> cd ../fdfault/src
> make

assuming you have an appropriate C++ compiler with an MPI Library. You may need to change some of the compiler flags -- I have mostly tested the code using the GNU Compilers and OpenMPI.

If you downloaded the code via a gzipped tarball, the User's Guide should already be available in PDF form in the docs directory. If you downloaded the code from the git repository, you will need to build the User's Guide yourself (requires a LaTeX distribution with a few standard packages, notably TikZ/PGF).

> cd fdfault/docs/
> pdflatex usersguide.tex

The User's Guide includes detailed instructions on setting up problems and running the code.

#########################################################################################

If you use this code in a scientific publication, please cite the following papers